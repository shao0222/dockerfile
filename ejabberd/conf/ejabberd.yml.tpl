###
### ejabberd configuration file
###

###.  =======
###'  LOGGING

##
## loglevel: Verbosity of log files generated by ejabberd.
## 0: No ejabberd log at all (not recommended)
## 1: Critical
## 2: Error
## 3: Warning
## 4: Info
## 5: Debug
##
loglevel: 4
log_rotate_size: 10485760
log_rotate_date: ""
log_rotate_count: 1
log_rate_limit: 100

###.  ================
###'  SERVED HOSTNAMES

##
## hosts: Domains served by ejabberd.
## You can define one or several, for example:
## hosts:
##   - "example.net"
##   - "example.com"
##   - "example.org"
##
hosts:
  - "test3.bangwo8.com"

###.  ===============
###'  CACHE CONFIG

use_cache: true
cache_missed: true
cache_size: 3000
cache_life_time: 3600

###.  ============
###'  Certificates

## List all available PEM files containing certificates for your domains,
## chains of certificates or certificate keys. Full chains will be built
## automatically by ejabberd.
##
certfiles: 
  - "/opt/ejabberd/ssl/host.pem"
{%- for xmpp_domain in env['XMPP_DOMAIN'].split() %}
  - "/opt/ejabberd/ssl/{{ xmpp_domain }}.pem"
{%- endfor %}

###.  =================
###'  TLS configuration

## s2s_protocol_options: 'TLS_OPTIONS'
define_macro:
  'TLS_OPTIONS':
    - "no_sslv3"

###.  ===============
###'  LISTENING PORTS

##
## listen: The ports ejabberd will listen on, which service each is handled
## by and what options to start it with.
##
listen:
-
  port: 5222
  ## ip: "::"
  module: ejabberd_c2s
  starttls: true
  protocol_options: 'TLSOPTS'
  max_stanza_size: 65536
  shaper: c2s_shaper
  access: c2s
-
  port: 5269
  ## ip: "::"
  module: ejabberd_s2s_in
  max_stanza_size: 131072
  shaper: s2s_shaper
-
  port: 5280
  ## ip: "::"
  module: ejabberd_http
  request_handlers:
    "/websocket": ejabberd_http_ws
    "/bosh": mod_bosh
  web_admin: false
  http_bind: true
  captcha: false
  tls: true
  protocol_options: 'TLSOPTS'
-
  port: 5281
  ## ip: "::"
  module: ejabberd_http
  request_handlers:
    "/api": mod_http_api
  web_admin: true
  captcha: false
  tls: true

###.  ==================
###'  S2S GLOBAL OPTIONS

##
## s2s_use_starttls: Enable STARTTLS for S2S connections.
## Allowed values are: false, optional or required
## You must specify 'certfiles' option
##
s2s_use_starttls: optional

##
## S2S whitelist or blacklist
##
## Default s2s policy for undefined hosts.
##
## s2s_access: s2s

##
## Outgoing S2S options
##
## Preferred address families (which to try first) and connect timeout
## in seconds.
##
## outgoing_s2s_families:
##   - ipv4
##   - ipv6
## outgoing_s2s_timeout: 190

###.  ==============
###'  AUTHENTICATION

auth_method: external
extauth_program: "/usr/bin/php /opt/ejabberd/scripts/auth/auth_script.php"
extauth_instances: 3
auth_use_cache: true
resource_conflict: closeold

###.  ==============
###'  DATABASE SETUP

## ejabberd by default uses the internal Mnesia database,
## so you do not necessarily need this section.
## This section provides configuration examples in case
## you want to use other database backends.
## Please consult the ejabberd Guide for details on database creation.

##
## MySQL server:
##
sql_type: mysql
sql_server: "mysql-mysqlha-0.mysql-mysqlha"
sql_database: "ejabberd"
sql_username: "ejabberd"
sql_password: "ejabberd"
new_sql_schema: true
sql_port: 3306
sql_pool_size: 10
sql_keepalive_interval: 28800

###.  ===============
###'  TRAFFIC SHAPERS

shaper:
  normal: 1000
  fast: 50000

max_fsm_queue: 10000

###.   ====================
###'   ACCESS CONTROL LISTS
acl:
  admin:
    user:
      - "admin@test3.bangwo8.com"
      - "bw8admin@test3.bangwo8.com"
      - "bw8adminwork@test3.bangwo8.com"
      - "notice_center@test3.bangwo8.com"

  ## Local users: don't modify this.
  ##
  local:
    user_regexp: ""
  ##
  ## Loopback network
  ##
  loopback:
    ip:
      - "127.0.0.0/8"
      - "::1/128"
      - "::FFFF:127.0.0.1/128"

###.  ============
###'  SHAPER RULES

shaper_rules:
  ## Maximum number of simultaneous sessions allowed for a single user:
  max_user_sessions: 10
  ## Maximum number of offline messages that users can have:
  max_user_offline_messages:
    - 5000: admin
    - 100
  ## For C2S connections, all users except admins use the "normal" shaper
  c2s_shaper:
    - none: admin
    - normal
  ## All S2S connections use the "fast" shaper
  s2s_shaper: fast

###.  ============
###'  ACCESS RULES
access_rules:
  ## This rule allows access only for local users:
  local:
    - allow: local
  ## Only non-blocked users can use c2s connections:
  c2s:
    - deny: blocked
    - allow
  ## Only admins can send announcement messages:
  announce:
    - allow: admin
  ## Only admins can use the configuration interface:
  configure:
    - allow: admin
  ## Only accounts of the local ejabberd server can create rooms:
  muc_create:
    - allow: local
  ## Only accounts on the local ejabberd server can create Pubsub nodes:
  pubsub_createnode:
    - allow: local
  ## In-band registration allows registration of any possible username.
  ## To disable in-band registration, replace 'allow' with 'deny'.
  register:
    - allow
  ## Only allow to register from localhost
  trusted_network:
    - allow: loopback

## ===============
## API PERMISSIONS
## ===============
api_permissions:
  "console commands":
    from:
      - ejabberd_ctl
    who: all
    what: "*"
  "admin access":
    who:
      - access:
          - allow:
            - acl: loopback
            - acl: admin
      - oauth:
        - scope: "ejabberd:admin"
        - access:
          - allow:
            - acl: loopback
            - acl: admin
    what:
      - "*"
      - "!stop"
      - "!start"
  "public commands":
    who:
      - ip: "127.0.0.1/8"
    what:
      - "status"
      - "connected_users_number"

## By default the frequency of account registrations from the same IP
## is limited to 1 account every 10 minutes. To disable, specify: infinity
## registration_timeout: 600

###.  ================
###'  DEFAULT LANGUAGE
language: "en"

###.  ====
###'  ACME
acme:
   contact: "mailto:admin@test3.bangwo8.com"
   ca_url: "https://acme-v01.api.letsencrypt.org"

###.  =======
###'  MODULES
modules:
  ##mod_message_log:
  ##  filename: "/opt/ejabberd/logs/message.log"
  mod_adhoc: {}
  mod_admin_extra: {}
  mod_announce: # recommends mod_adhoc
    access: announce
  mod_blocking: {} # requires mod_privacy
  mod_caps: {}
  mod_carboncopy: {}
  mod_client_state: {}
  mod_configure: {} # requires mod_adhoc
  mod_disco: {}
  mod_bosh: {}
  ## mod_http_fileserver:
  ##   docroot: "/var/www"
  ##   accesslog: "/opt/ejabberd/logs/access.log"
  ## mod_http_upload:
  ##   # docroot: "@HOME@/upload"
  ##   put_url: "https://@HOST@:5444"
  ##   thumbnail: false # otherwise needs ejabberd to be compiled with libgd support
  ## mod_http_upload_quota:
  ##   max_days: 30
  mod_last:
    db_type: sql
    use_cache: true 
  ## XEP-0313: Message Archive Management
  ## You might want to setup a SQL backend for MAM because the mnesia database is
  ## limited to 2GB which might be exceeded on large servers
  ## mod_mam: {} # for xep0313, mnesia is limited to 2GB, better use an SQL backend
  mod_mam:
    db_type: sql
    use_cache: true
    default: always
  mod_muc:
    db_type: sql
    host: "conference.@HOST@"
    history_size: 20
    default_room_options:
      mam: true
      logging: true
      persistent: false
    access:
      - allow
    access_admin:
      - allow: admin
    access_create: muc_create
    access_persistent: muc_create
  mod_muc_admin: {}
  mod_muc_log: {}
  mod_multicast: {}
  mod_offline:
    db_type: sql
    store_empty_body: true
    access_max_user_messages: max_user_offline_messages
  mod_ping: {}
  ## mod_pres_counter:
  ##   count: 5
  ##   interval: 60
  mod_privacy: {}
  mod_private: {}
  ## mod_proxy65: {}
  mod_pubsub:
    access_createnode: pubsub_createnode
    ignore_pep_from_offline: true
    last_item_cache: false
    plugins:
    - "flat"
    - "hometree"
    - "pep"
  mod_push: {}
  mod_push_keepalive: {}
  mod_register:
    welcome_message:
      subject: "Welcome!"
      body: |-
        Hi.
        Welcome to this XMPP server.
    ip_access: trusted_network
    access: register
  mod_roster:
    use_cache: true
    cache_size: 10000
    cache_life_time: 3600
  mod_shared_roster:
    db_type: sql
  ## mod_stats: {}
  ## mod_time: {}
  mod_vcard:
    search: false
    use_cache: true
    cache_size: 10000
    cache_life_time: 3600
  mod_vcard_xupdate: {}
  mod_avatar: {}
  mod_version: {}
  mod_stream_mgmt: {}
  mod_s2s_dialback: {}
  mod_http_api: {}
  mod_fail2ban: {}

allow_contrib_modules: true
